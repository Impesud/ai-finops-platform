name: CI

on:
  push:
    branches:
      - dev
      - main
  pull_request:
    branches:
      - dev
      - main

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io/impesud

jobs:
  test:
    name: Install & Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install backend dependencies & run tests
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pytest --maxfail=1 --disable-warnings -q

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install frontend dependencies & run tests
        working-directory: frontend
        run: |
          npm ci
          npm run lint
          npm test

  publish:
    name: Build & Publish Docker Images
    needs: test
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate dynamic tag
        id: tag
        run: |
          echo "TAG=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV
          echo "SHORT_SHA=${GITHUB_SHA::8}" >> $GITHUB_ENV
          if [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
            echo "PREFIX=prod" >> $GITHUB_ENV
          else
            echo "PREFIX=ci" >> $GITHUB_ENV
          fi

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PAT_FOR_GHCR }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & push backend image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/ai-finops-platform-app:${{ env.PREFIX }}-${{ env.TAG }}
            ${{ env.REGISTRY }}/ai-finops-platform-app:latest

      - name: Build & push frontend image
        uses: docker/build-push-action@v5
        with:
          context: frontend
          file: ./frontend/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/ai-finops-platform-frontend:${{ env.PREFIX }}-${{ env.TAG }}
            ${{ env.REGISTRY }}/ai-finops-platform-frontend:latest




